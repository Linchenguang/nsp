#include "Cif.h"

namespace jian {
   
Cif::Cif(std::string file_name) {
    std::ifstream ifile(file_name.c_str());
    std::string line;
    std::vector<std::string> frags;
    int n = 0;
    while (std::getline(ifile, line)) {
        if (boost::trim_copy(line) == "#") continue;
        if (n == 0) {
            /// read name
            _name = boost::trim_copy(line);
            n++;
            continue;
        }
        tokenize(line, frags, " ", "''\"\"");
std::copy(frags.begin(), frags.end(), std::ostream_iterator<std::string>(std::cerr, ":"));
std::cerr << std::endl;
        if (frags[0] == "loop_") {
            /// read loop
            std::getline(ifile, line);
            tokenize(line, frags, " ", "''\"\"");
            std::vector<std::string> names;
            do {
                if (frags[0][0] == '_') {
                    names.push_back(frags[0]);
                } else {
std::copy(frags.begin(), frags.end(), std::ostream_iterator<std::string>(std::cerr, ":"));
std::cerr << std::endl;
                    for (int i = 0; i < frags.size(); i++) {
                        _loop[names[i]].push_back(frags[i]);
                    }
                }
                std::getline(ifile, line);
                tokenize(line, frags, " ", "''\"\"");
            } while (frags[0] != "#");
        } else {
            /// read key-values
            do {
                (*this)[frags[0]] = frags[1];
                std::getline(ifile, line);
                tokenize(line, frags, " ", "''\"\"");
            } while (frags[0] != "#");
        }
        n++;
    }
    ifile.close();
}

} /// namespace jian

